Inspired by Django templating and Jinja2

FOR SURE:
- Documentation
- Pre-set date and time formats from Django
- Implement {# ... #}, decide what to do with verbantim
- Check how spaceless works with < and > in quotes (single and double)
- More tests (especially test blocks re-using, that caching works properly)
- More test for jsescape filter. Works other way than python's version.
- Debug tag tests
- Error exceptions
- Recursion protection on inheritance
- Recursion protection on inclusion
- Recursion protection on deep comparision
- Error messaging with line numbers and so on
- Improve url tag regexp reversing
- Implement cache control options for Template constructor
- Implement external caching as perl code
- as_string method for variables and operations, useful for good error messaging
- Performance testing in comparision of other perl implementations and Django itself
- DTL::Fast::Utils::html_protect should work using XS module (to take from CDI3)
- Make compatible comparisions to None, True, False and undef (new)
- Implement Django filter plugins from: https://docs.djangoproject.com/en/1.7/ref/templates/builtins/#built-in-filter-reference
- Implement Django tag plugins from: https://docs.djangoproject.com/en/1.7/ref/templates/builtins/#built-in-tag-reference
- Profiling and optimising using NYTProf
- Performance testing for old and new context variables work

SECURITY:
- load tag can load any module, even eval command, it's not secure. What can we do? Remember about perl poems.

NEED IDEA:
- How linenumbers filter should behave on empty lines?
- Shouldn't we make cmp operator? Could re-use in dictsort for example.
- Shouldn't dirs be passed as named optional arugument? 
- Working with localization
- Shouldn't tags/filters binging be in BEGIN block?
- Do we need mappings for date formatting between Django and Date::Format?
- Compare two undefs. What should we do?
- Macroses in jinja. What for? What is the difference from include?
- debug tag currently just dumping context. What else? check with Django. Supposedly there should be a template tree
- csrf_token tag, what to do with it?
- Control of closing tags and die or warn. 
- Do something about spaces around tags and placeholders. 
- What to do on not existed context variable. 
- Deep comparision option to enable/disable multi-level comparision in Operators.
